USE SAKILA;

-- 1a
SELECT FIRST_NAME, LAST_NAME
FROM ACTOR;

-- 1b
SELECT CONCAT(FIRST_NAME, ' ' ,LAST_NAME) AS "Actor Name"
FROM ACTOR;

-- 2a
SELECT ACTOR_ID, FIRST_NAME, LAST_NAME
FROM ACTOR
WHERE FIRST_NAME = 'Joe';

-- 2b
SELECT ACTOR_ID, FIRST_NAME, LAST_NAME
FROM ACTOR
WHERE LAST_NAME LIKE '%GEN%';

-- 2c
SELECT ACTOR_ID, FIRST_NAME, LAST_NAME
FROM ACTOR
WHERE LAST_NAME LIKE '%LI%'
ORDER BY LAST_NAME, FIRST_NAME;

-- 2d
SELECT COUNTRY_ID, COUNTRY
FROM COUNTRY
WHERE COUNTRY IN ('Afghanistan', 'Bangladesh', 'China');

-- 3a
ALTER TABLE ACTOR
ADD COLUMN description BLOB;

-- 3b
ALTER TABLE ACTOR
DROP COLUMN description;

-- 4a
SELECT LAST_NAME, COUNT(LAST_NAME) AS 'Total Last Names'
FROM ACTOR
GROUP BY LAST_NAME;

-- 4b
SELECT LAST_NAME, COUNT(LAST_NAME) AS 'Total Last Names'
FROM ACTOR
GROUP BY LAST_NAME
HAVING COUNT(LAST_NAME) >= 2;

-- 4c
UPDATE ACTOR
SET FIRST_NAME = 'HARPO'
WHERE FIRST_NAME = 'GROUCHO' AND LAST_NAME = 'WILLIAMS';

-- 4d
UPDATE ACTOR
SET First_NAME = 'GROUCHO'
WHERE FIRST_NAME = 'HARPO';

-- 5a
SHOW CREATE TABLE ADDRESS;

-- 6a
SELECT S.FIRST_NAME, S.LAST_NAME, A.ADDRESS
FROM STAFF AS S JOIN ADDRESS AS A
USING(ADDRESS_ID); 

-- 6b
SELECT S.FIRST_NAME, S.LAST_NAME, SUM(P.AMOUNT) AS 'Total Amount'
FROM STAFF AS S JOIN PAYMENT AS P
USING(STAFF_ID)
WHERE YEAR(PAYMENT_DATE) = 2005 AND MONTH(PAYMENT_DATE) = 8
GROUP BY STAFF_ID;

-- 6c
SELECT TITLE, COUNT(ACTOR_ID) AS 'Total Actors'
FROM FILM INNER JOIN FILM_ACTOR
USING(FILM_ID)
GROUP BY FILM_ID;

-- 6d
SELECT COUNT(*) AS 'Total Films'
FROM FILM INNER JOIN INVENTORY
USING(FILM_ID)
WHERE FILM.TITLE = "Hunchback Impossible";

-- 6e
SELECT FIRST_NAME, LAST_NAME, SUM(AMOUNT) AS 'Total Amount Paid'
FROM PAYMENT INNER JOIN CUSTOMER 
USING(CUSTOMER_ID)
GROUP BY CUSTOMER_ID
ORDER BY LAST_NAME;

-- 7a
SELECT TITLE
FROM FILM
WHERE LANGUAGE_ID = 
	(SELECT LANGUAGE_ID
    FROM LANGUAGE
    WHERE NAME = 'English')
    AND
    (TITLE LIKE 'K%' OR TITLE LIKE 'Q%');
    
-- 7b
SELECT FIRST_NAME, LAST_NAME
FROM ACTOR 
WHERE ACTOR_ID IN 
	(SELECT ACTOR_ID 
	 FROM FILM_ACTOR
     WHERE FILM_ID = 
		(SELECT FILM_ID
         FROM FILM
         WHERE TITLE = 'Alone Trip'));

-- 7C
SELECT FIRST_NAME, LAST_NAME, EMAIL
FROM CUSTOMER INNER JOIN ADDRESS
USING(ADDRESS_ID)
INNER JOIN CITY
USING(CITY_ID)
INNER JOIN COUNTRY
USING(COUNTRY_ID)
WHERE COUNTRY = 'Canada';

-- 7d
SELECT TITLE
FROM FILM INNER JOIN FILM_CATEGORY
USING(FILM_ID)
INNER JOIN CATEGORY 
USING(CATEGORY_ID)
WHERE NAME = 'FAMILY';

-- 7e
SELECT TITLE, COUNT(*) AS 'Total Rent'
FROM FILM INNER JOIN INVENTORY
USING(FILM_ID)
INNER JOIN RENTAL
USING(INVENTORY_ID)
GROUP BY FILM_ID
ORDER BY COUNT(FILM_ID) DESC;

-- 7f
SELECT STORE_ID, SUM(AMOUNT) AS 'TOTAL EARNINGS'
FROM STORE INNER JOIN CUSTOMER 
USING(STORE_ID)
INNER JOIN PAYMENT
USING(CUSTOMER_ID)
GROUP BY STORE_ID;

-- 7g
SELECT STORE_ID, CITY, COUNTRY
FROM STORE INNER JOIN ADDRESS
USING(ADDRESS_ID)
INNER JOIN CITY
USING(CITY_ID)
INNER JOIN COUNTRY
USING(COUNTRY_ID);

-- 7h
SELECT CATEGORY.NAME, SUM(PAYMENT.AMOUNT) AS 'TOTAL EARNINGS'
FROM CATEGORY INNER JOIN FILM_CATEGORY
USING(CATEGORY_ID)
INNER JOIN INVENTORY
USING(FILM_ID)
INNER JOIN RENTAL
USING(INVENTORY_ID)
INNER JOIN PAYMENT
USING(RENTAL_ID)
GROUP BY CATEGORY.NAME
ORDER BY SUM(PAYMENT.AMOUNT) DESC
LIMIT 5;

-- 8a
CREATE VIEW Top_Five_Genres AS
	SELECT CATEGORY.NAME, SUM(PAYMENT.AMOUNT) AS 'TOTAL EARNINGS'
	FROM CATEGORY INNER JOIN FILM_CATEGORY
	USING(CATEGORY_ID)
	INNER JOIN INVENTORY
	USING(FILM_ID)
	INNER JOIN RENTAL
	USING(INVENTORY_ID)
	INNER JOIN PAYMENT
	USING(RENTAL_ID)
	GROUP BY CATEGORY.NAME
	ORDER BY SUM(PAYMENT.AMOUNT) DESC
	LIMIT 5;

-- 8b
SELECT * FROM TOP_FIVE_GENRES;

-- 8c
DROP VIEW TOP_FIVE_GENRES;
